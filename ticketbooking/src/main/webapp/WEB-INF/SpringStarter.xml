<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
    	http://www.springframework.org/schema/beans/spring-beans.xsd
    	http://www.springframework.org/schema/context
    	http://www.springframework.org/schema/context/spring-context.xsd
    	http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- Step 3: Add support for component scanning -->
	<context:component-scan base-package="com.example.ticketbooking" />

	<!-- Step 4: Add support for conversion, formatting and validation support -->
	<mvc:annotation-driven/>

	<!-- Step 5: Define Spring MVC view resolver -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/" /> 
		
	</bean>
	
	<bean id="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
	<mvc:resources mapping="/resources/**" location="/resources/"></mvc:resources>
	<!-- <mvc:resources mapping="/static/**" location="/WEB-INF/static/"></mvc:resources> -->
	
	<!-- Step 6: Setup DataSource/ ConnectionPool -->
	<bean id="myDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="UserClass" value="com.mysql.jdbc.Driver"/>
		<property name="jdbcUrl" value="jdbc:mysql://traindatabase.cslbs7lotlm7.us-west-1.rds.amazonaws.com:3306/traindatabase?useSSL=false"/>
		<property name="user" value="traindatabase"/>
		<property name="password" value="traindatabase"/>
		
		<!-- these are connection pool properties for C3P0 -->
		<property name="initialPoolSize" value="5"/>
		<property name="minPoolSize" value="5"/>
		<property name="maxPoolSize" value="20"/>
		<property name="maxIdleTime" value="30000"/>
	</bean>
		
	<!-- Step 7: Setup Hibernate session factory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="myDataSource"/>
		<property name="packagesToScan" value="com.example.ticketbooking.model"/>
		<property name="hibernateProperties">
			<props><prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
			<prop key="hibernate.show_sql">true</prop>
			<prop key="hibernate.hbm2ddl.auto">update</prop></props>
		</property>
	</bean>
	
	<!-- Step 8: Setup Hibernate transaction manager -->
	<bean id="myTransactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<!-- Step 9: Enable configuration of transactional behavior based on annotations -->
	<tx:annotation-driven transaction-manager="myTransactionManager"/>

</beans>





